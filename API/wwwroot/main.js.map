{"version":3,"sources":["./src/app/models/userParams.ts","./src/app/services/members.service.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/services/presence.service.ts","./src/app/members/member-messages/member-messages.component.ts","./src/app/members/member-messages/member-messages.component.html","./src/app/forms/text-input/text-input.component.ts","./src/app/forms/text-input/text-input.component.html","./src/app/forms/date-input/date-input.component.ts","./src/app/forms/date-input/date-input.component.html","./src/app/admin/photo-management/photo-management.component.ts","./src/app/admin/photo-management/photo-management.component.html","./src/app/services/paginationHelper.ts","./src/app/errors/not-found/not-found.component.ts","./src/app/errors/not-found/not-found.component.html","./src/app/errors/server-error/server-error.component.ts","./src/app/errors/server-error/server-error.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/services/confirm.service.ts","./src/app/services/admin.service.ts","./src/environments/environment.ts","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/services/busy.service.ts","./src/app/admin/user-management/user-management.component.ts","./src/app/admin/user-management/user-management.component.html","./src/app/members/member-detail/member-detail.component.ts","./src/app/members/member-detail/member-detail.component.html","./src/app/members/member-list/member-list.component.ts","./src/app/members/member-list/member-list.component.html","./src/app/guards/prevent-unsaved-changes.guard.ts","./src/app/models/pagination.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/guards/admin.guard.ts","./src/app/guards/auth.guard.ts","./src/app/app.module.ts","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/interceptors/loading.interceptor.ts","./src/app/directives/has-role.directive.ts","./src/app/services/account.service.ts","./src/app/lists/lists.component.ts","./src/app/lists/lists.component.html","./src/app/interceptors/jwt.interceptor.ts","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/modules/shared.module.ts","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/resolvers/member-detail.resolver.ts","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/interceptors/error.interceptor.ts","./src/app/services/message.service.ts","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/modals/confirm-dialog/confirm-dialog.component.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.html","./src/app/app-routing.module.ts","./src/app/modals/roles-modal/roles-modal.component.ts","./src/app/modals/roles-modal/roles-modal.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// models\nimport { User } from './user';\n\nexport class UserParams {\n  gender: string;\n  minAge = 18;\n  maxAge = 99;\n  pageNumber = 1;\n  pageSize = 5;\n  orderBy = 'lastActive';\n\n  constructor(user: User) {\n    this.gender = user.gender === 'female' ? 'male' : 'female';\n  }\n}\n","// libs\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { of, pipe } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n// models\nimport { Member } from '../models/member';\nimport { PaginatedResult } from '../models/pagination';\nimport { User } from '../models/user';\nimport { UserParams } from '../models/userParams';\nimport { AccountService } from './account.service';\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MembersService {\n  baseUrl = environment.apiUrl;\n  members: Member[] = [];\n  memberCache = new Map();\n  user: User;\n  userParams: UserParams;\n\n  constructor(\n    private http: HttpClient,\n    private accountService: AccountService\n  ) {\n    this.accountService.currentUser$.pipe(take(1)).subscribe((user) => {\n      this.user = user;\n      this.userParams = new UserParams(user);\n    });\n  }\n\n  getUserParams(): UserParams {\n    return this.userParams;\n  }\n\n  setUserParams(params: UserParams): void {\n    this.userParams = params;\n  }\n\n  resetUserParams(): UserParams {\n    this.userParams = new UserParams(this.user);\n\n    return this.userParams;\n  }\n\n  getMembers(userParams: UserParams): Observable<PaginatedResult<Member[]>> {\n    const cacheKey = Object.values(userParams).join('-');\n    const cacheResponse = this.memberCache.get(cacheKey);\n\n    if (cacheResponse) {\n      return of(cacheResponse);\n    }\n\n    let params = getPaginationHeaders(\n      userParams.pageNumber,\n      userParams.pageSize\n    );\n\n    params = params.append('minAge', userParams.minAge.toString());\n    params = params.append('maxAge', userParams.maxAge.toString());\n    params = params.append('gender', userParams.gender);\n    params = params.append('orderBy', userParams.orderBy);\n\n    return getPaginatedResult<Member[]>(\n      `${this.baseUrl}users`,\n      params,\n      this.http\n    ).pipe(\n      map((response) => {\n        this.memberCache.set(cacheKey, response);\n\n        return response;\n      })\n    );\n  }\n\n  getMember(username: string): Observable<Member> {\n    const member = [...this.memberCache.values()]\n      .reduce((arr, elem) => arr.concat(elem.result), [])\n      .find((cachedMember: Member) => cachedMember.username === username);\n\n    if (member) {\n      return of(member);\n    }\n\n    return this.http.get<Member>(`${this.baseUrl}users/${username}`);\n  }\n\n  updateMember(member: Member): Observable<void> {\n    return this.http.put(`${this.baseUrl}users`, member).pipe(\n      map(() => {\n        const index = this.members.indexOf(member);\n\n        this.members[index] = member;\n      })\n    );\n  }\n\n  setMainPhoto(photoId: number): Observable<object> {\n    return this.http.put(`${this.baseUrl}users/set-main-photo/${photoId}`, {});\n  }\n\n  deletePhoto(photoId: number): Observable<object> {\n    return this.http.delete(`${this.baseUrl}users/delete-photo/${photoId}`);\n  }\n\n  addLike(username: string): Observable<object> {\n    return this.http.post(`${this.baseUrl}likes/${username}`, {});\n  }\n\n  getLikes(\n    predicate: string,\n    pageNumber: number,\n    pageSize: number\n  ): Observable<PaginatedResult<Partial<Member[]>>> {\n    let params = getPaginationHeaders(pageNumber, pageSize);\n    params = params.append('predicate', predicate);\n\n    return getPaginatedResult<Partial<Member[]>>(\n      `${this.baseUrl}likes`,\n      params,\n      this.http\n    );\n  }\n}\n","// libs\r\nimport { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  ValidatorFn,\r\n  Validators,\r\n} from '@angular/forms';\r\n\r\n// services\r\nimport { AccountService } from '../services/account.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css'],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  @Output() cancelRegister = new EventEmitter();\r\n  registerForm: FormGroup;\r\n  maxDate: Date;\r\n  validationErrors: string[] = [];\r\n\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private toastr: ToastrService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.initializeForm();\r\n    this.maxDate = new Date();\r\n    this.maxDate.setFullYear(this.maxDate.getFullYear() - 18);\r\n  }\r\n\r\n  initializeForm(): void {\r\n    this.registerForm = this.formBuilder.group({\r\n      gender: ['male'],\r\n      username: ['', Validators.required],\r\n      knownAs: ['', Validators.required],\r\n      dateOfBirth: ['', Validators.required],\r\n      city: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n      password: [\r\n        '',\r\n        [Validators.required, Validators.minLength(4), Validators.maxLength(8)],\r\n      ],\r\n      confirmPassword: [\r\n        '',\r\n        [Validators.required, this.matchPasswords('password')],\r\n      ],\r\n    });\r\n  }\r\n\r\n  matchPasswords(matchTo: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      return control?.value === control?.parent?.controls[matchTo].value\r\n        ? null\r\n        : { isMatching: true };\r\n    };\r\n  }\r\n\r\n  register(): void {\r\n    this.accountService.register(this.registerForm.value).subscribe(\r\n      (response) => {\r\n        this.router.navigateByUrl('/members');\r\n      },\r\n      (error) => {\r\n        this.validationErrors = error;\r\n      }\r\n    );\r\n  }\r\n\r\n  cancel(): void {\r\n    this.cancelRegister.emit(false);\r\n  }\r\n}\r\n","<form\r\n  [formGroup]=\"registerForm\"\r\n  (ngSubmit)=\"registerForm.valid && register()\"\r\n  autocomplete=\"off\"\r\n>\r\n  <h2 class=\"text-center text-primary\">Sign Up</h2>\r\n  <hr />\r\n\r\n  <div class=\"form-group\">\r\n    <label class=\"control-label\" style=\"margin-right: 10px\">I am a: </label>\r\n    <label class=\"radio-inline\">\r\n      <input type=\"radio\" value=\"male\" formControlName=\"gender\" /> Male\r\n    </label>\r\n    <label class=\"radio-inline\">\r\n      <input\r\n        type=\"radio\"\r\n        value=\"female\"\r\n        formControlName=\"gender\"\r\n        class=\"ml-3\"\r\n      />\r\n      Female\r\n    </label>\r\n  </div>\r\n\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['username']\"\r\n    [label]=\"'Username'\"\r\n  ></app-text-input>\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['knownAs']\"\r\n    [label]=\"'Known As'\"\r\n  ></app-text-input>\r\n  <app-date-input\r\n    [formControl]=\"registerForm.controls['dateOfBirth']\"\r\n    [label]=\"'Date Of Birth'\"\r\n    [maxDate]=\"maxDate\"\r\n  ></app-date-input>\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['city']\"\r\n    [label]=\"'City'\"\r\n  ></app-text-input>\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['country']\"\r\n    [label]=\"'Country'\"\r\n  ></app-text-input>\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['password']\"\r\n    [label]=\"'Password'\"\r\n    [type]=\"'password'\"\r\n  ></app-text-input>\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['confirmPassword']\"\r\n    [label]=\"'Confirm Password'\"\r\n    [type]=\"'password'\"\r\n  ></app-text-input>\r\n\r\n  <div class=\"row\" *ngIf=\"validationErrors.length > 0\">\r\n    <ul class=\"text-danger\">\r\n      <li *ngFor=\"let error of validationErrors\">\r\n        {{ error }}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div class=\"form-group text-center\">\r\n    <button\r\n      [disabled]=\"!registerForm.valid\"\r\n      class=\"btn btn-success mr-2\"\r\n      type=\"submit\"\r\n    >\r\n      Register\r\n    </button>\r\n    <button (click)=\"cancel()\" class=\"btn btn-default mr-2\" type=\"button\">\r\n      Cancel\r\n    </button>\r\n  </div>\r\n</form>\r\n","// Libs\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { ToastrService } from 'ngx-toastr';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n// Models\nimport { User } from '../models/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PresenceService {\n  hubUrl = environment.hubUrl;\n  private hubConnection: HubConnection;\n  private onlineUsersSource = new BehaviorSubject<string[]>([]);\n  onlineUsers$ = this.onlineUsersSource.asObservable();\n\n  constructor(private toastr: ToastrService, private router: Router) {}\n\n  createHubConnection(user: User): void {\n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(`${this.hubUrl}presence`, {\n        accessTokenFactory: () => user.token,\n      })\n      .withAutomaticReconnect()\n      .build();\n\n    this.hubConnection.start().catch((error) => console.log(error));\n\n    this.hubConnection.on('UserIsOnline', (username) => {\n      this.onlineUsers$.pipe(take(1)).subscribe((usernames) => {\n        this.onlineUsersSource.next([...usernames, username]);\n      });\n    });\n\n    this.hubConnection.on('UserIsOffline', (username) => {\n      this.onlineUsers$.pipe(take(1)).subscribe((usernames) => {\n        this.onlineUsersSource.next([\n          ...usernames.filter((name) => name !== username),\n        ]);\n      });\n    });\n\n    this.hubConnection.on('GetOnlineUsers', (usernames: string[]) => {\n      this.onlineUsersSource.next(usernames);\n    });\n\n    this.hubConnection.on('NewMessageReceived', ({ username, knownAs }) => {\n      this.toastr\n        .info(`${knownAs} has sent you a new message!`)\n        .onTap.pipe(take(1))\n        .subscribe(() =>\n          this.router.navigateByUrl(`/members/${username}?tab=3`)\n        );\n    });\n  }\n\n  stopHubConnection(): void {\n    this.hubConnection.stop().catch((error) => console.log(error));\n  }\n}\n","// Libs\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n// Models\nimport { Message } from 'src/app/models/message';\n\n// Services\nimport { MessageService } from 'src/app/services/message.service';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css'],\n})\nexport class MemberMessagesComponent implements OnInit {\n  @ViewChild('messageForm') messageForm: NgForm;\n  @Input() messages: Message[];\n  @Input() username: string;\n  messageContent: string;\n\n  constructor(public messageService: MessageService) {}\n\n  ngOnInit(): void {}\n\n  sendMessage(): void {\n    this.messageService\n      .sendMessage(this.username, this.messageContent)\n      .then(() => {\n        this.messageForm.reset();\n      });\n  }\n}\n","<div class=\"card\">\n  <div class=\"card-body\">\n    <div *ngIf=\"(messageService.messageThread$ | async)?.length === 0\">\n      No messages yet... say hi by using the message box below\n    </div>\n\n    <ul\n      #scrollMe\n      style=\"overflow: scroll; height: 500px\"\n      [scrollTop]=\"scrollMe.scrollHeight\"\n      *ngIf=\"(messageService.messageThread$ | async).length > 0\"\n      class=\"chat\"\n    >\n      <li *ngFor=\"let message of messageService.messageThread$ | async\">\n        <div>\n          <span class=\"chat-img float-right\">\n            <img\n              class=\"rounded-circle\"\n              src=\"{{ message.senderPhotoUrl || './assets/user.png' }}\"\n              alt=\"{{ message.senderUsername }}\"\n            />\n          </span>\n          <div class=\"chat-body\">\n            <div class=\"header\">\n              <small class=\"text-muted\">\n                <span class=\"fa fa-clock-o\">\n                  {{ message.messageSent | timeago }}</span\n                >\n                <span\n                  class=\"text-danger\"\n                  *ngIf=\"\n                    !message.dateRead && message.senderUsername !== username\n                  \"\n                >\n                  (unread)\n                </span>\n                <span\n                  class=\"text-success\"\n                  *ngIf=\"\n                    message.dateRead && message.senderUsername !== username\n                  \"\n                >\n                  (read {{ message.dateRead | timeago }})\n                </span>\n              </small>\n            </div>\n            <p>{{ message.content }}</p>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </div>\n\n  <div class=\"card-footer\">\n    <form #messageForm=\"ngForm\" (ngSubmit)=\"sendMessage()\" autocomplete=\"off\">\n      <div class=\"input-group\">\n        <input\n          name=\"messageContent\"\n          required\n          [(ngModel)]=\"messageContent\"\n          type=\"text\"\n          class=\"form-control input-sm\"\n          placeholder=\"Send a private message\"\n        />\n        <div class=\"input-group-append\">\n          <button\n            [disabled]=\"!messageForm.valid\"\n            class=\"btn btn-primary\"\n            type=\"submit\"\n          >\n            Send\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, Input, OnInit, Self } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-text-input',\r\n  templateUrl: './text-input.component.html',\r\n  styleUrls: ['./text-input.component.css'],\r\n})\r\nexport class TextInputComponent implements ControlValueAccessor {\r\n  @Input() label: string;\r\n  @Input() type = 'text';\r\n\r\n  constructor(@Self() public ngControl: NgControl) {\r\n    this.ngControl.valueAccessor = this;\r\n  }\r\n\r\n  writeValue(obj: any): void {}\r\n\r\n  registerOnChange(fn: any): void {}\r\n\r\n  registerOnTouched(fn: any): void {}\r\n}\r\n","<div class=\"form-group\">\r\n  <input\r\n    [class.is-invalid]=\"ngControl.touched && ngControl.invalid\"\r\n    type=\"{{ type }}\"\r\n    class=\"form-control\"\r\n    [formControl]=\"ngControl.control\"\r\n    placeholder=\"{{ label }}\"\r\n  />\r\n  <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">\r\n    Please enter a {{ label }}\r\n  </div>\r\n  <div *ngIf=\"ngControl.control.errors?.minlength\" class=\"invalid-feedback\">\r\n    {{ label }} must be at least\r\n    {{ ngControl.control.errors.minlength['requiredLength'] }}\r\n  </div>\r\n  <div *ngIf=\"ngControl.control.errors?.maxlength\" class=\"invalid-feedback\">\r\n    {{ label }} must be at most\r\n    {{ ngControl.control.errors.maxlength['requiredLength'] }}\r\n  </div>\r\n  <div *ngIf=\"ngControl.control.errors?.isMatching\" class=\"invalid-feedback\">\r\n    Passwords do not match\r\n  </div>\r\n</div>\r\n","import { Self } from '@angular/core';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\n\r\n@Component({\r\n  selector: 'app-date-input',\r\n  templateUrl: './date-input.component.html',\r\n  styleUrls: ['./date-input.component.css'],\r\n})\r\nexport class DateInputComponent implements ControlValueAccessor {\r\n  @Input() label: string;\r\n  @Input() maxDate: Date;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  constructor(@Self() public ngControl: NgControl) {\r\n    this.ngControl.valueAccessor = this;\r\n    this.bsConfig = {\r\n      containerClass: 'theme-red',\r\n      dateInputFormat: 'DD MMMM YYYY',\r\n    };\r\n  }\r\n\r\n  writeValue(obj: any): void {}\r\n\r\n  registerOnChange(fn: any): void {}\r\n\r\n  registerOnTouched(fn: any): void {}\r\n}\r\n","<div class=\"form-group\">\r\n  <input\r\n    type=\"text\"\r\n    [class.is-invalid]=\"ngControl.touched && ngControl.invalid\"\r\n    class=\"form-control\"\r\n    [formControl]=\"ngControl.control\"\r\n    placeholder=\"{{ label }}\"\r\n    bsDatepicker\r\n    [bsConfig]=\"bsConfig\"\r\n    [maxDate]=\"maxDate\"\r\n  />\r\n  <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">\r\n    {{ label }} is required\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-photo-management',\n  templateUrl: './photo-management.component.html',\n  styleUrls: ['./photo-management.component.css'],\n})\nexport class PhotoManagementComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<p>photo-management works!</p>\n","// Libs\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n// Models\nimport { PaginatedResult } from '../models/pagination';\n\nexport function getPaginatedResult<T>(\n  url,\n  params,\n  http: HttpClient\n): Observable<PaginatedResult<T>> {\n  const paginatedResult: PaginatedResult<T> = new PaginatedResult<T>();\n\n  return http\n    .get<T>(url, { observe: 'response', params })\n    .pipe(\n      map((response) => {\n        paginatedResult.result = response.body;\n\n        if (response.headers.get('Pagination') !== null) {\n          paginatedResult.pagination = JSON.parse(\n            response.headers.get('Pagination')\n          );\n        }\n\n        return paginatedResult;\n      })\n    );\n}\n\nexport function getPaginationHeaders(\n  pageNumber: number,\n  pageSize: number\n): HttpParams {\n  let params = new HttpParams();\n\n  params = params.append('pageNumber', pageNumber.toString());\n  params = params.append('pageSize', pageSize.toString());\n\n  return params;\n}\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css'],\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<div class=\"container\">\r\n  <h1>Not found</h1>\r\n  <button class=\"btn btn-info btn-lg\" routerLink=\"/\">\r\n    Return to home page\r\n  </button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-server-error',\r\n  templateUrl: './server-error.component.html',\r\n  styleUrls: ['./server-error.component.css'],\r\n})\r\nexport class ServerErrorComponent implements OnInit {\r\n  error: any;\r\n\r\n  constructor(private router: Router) {\r\n    const navigation = this.router.getCurrentNavigation();\r\n    this.error = navigation?.extras?.state?.error;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<h4>\r\n  Internal Server Error - refreshing the page will make the error disappear!\r\n</h4>\r\n<ng-container *ngIf=\"error\">\r\n  <h5 class=\"text-danger\">Error: {{ error.message }}</h5>\r\n  <code class=\"mt-5\" style=\"background-color: whitesmoke\">{{\r\n    error.details\r\n  }}</code>\r\n</ng-container>\r\n","// libs\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css'],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  registerMode = false;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  registerToggle(): void {\r\n    this.registerMode = !this.registerMode;\r\n  }\r\n\r\n  cancelRegisterMode(event: boolean): void {\r\n    this.registerMode = event;\r\n  }\r\n}\r\n","<div class=\"container mt-5\">\r\n  <div *ngIf=\"!registerMode\" style=\"text-align: center\">\r\n    <h1>Find your match</h1>\r\n    <p class=\"lead\">\r\n      Come on in to view your matches... all you need to do is sign up!\r\n    </p>\r\n    <div class=\"text-center\">\r\n      <button (click)=\"registerToggle()\" class=\"btn btn-primary btn-lg mr-2\">\r\n        Register\r\n      </button>\r\n      <button class=\"btn btn-info btn-lg\">Learn more</button>\r\n    </div>\r\n  </div>\r\n\r\n  <div *ngIf=\"registerMode\" class=\"container\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-4\">\r\n        <app-register\r\n          (cancelRegister)=\"cancelRegisterMode($event)\"\r\n        ></app-register>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","// Libs\nimport { Injectable } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\n\n// Components\nimport { ConfirmDialogComponent } from '../modals/confirm-dialog/confirm-dialog.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfirmService {\n  bsModalRef: BsModalRef;\n\n  constructor(private modalService: BsModalService) {}\n\n  confirm(\n    title = 'Confirmation',\n    message = 'Are you sure?',\n    btnOkText = 'Ok',\n    btnCancelText = 'Cancel'\n  ): Observable<boolean> {\n    const config = {\n      initialState: {\n        title,\n        message,\n        btnOkText,\n        btnCancelText,\n      },\n    };\n\n    this.bsModalRef = this.modalService.show(ConfirmDialogComponent, config);\n\n    return new Observable<boolean>(this.getResult());\n  }\n\n  private getResult(): any {\n    return (observer) => {\n      const subscription = this.bsModalRef.onHidden.subscribe(() => {\n        observer.next(this.bsModalRef.content.result);\n        observer.complete();\n      });\n\n      return {\n        unsubscribe(): void {\n          subscription.unsubscribe();\n        },\n      };\n    };\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n// Libs\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n// Models\nimport { User } from '../models/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminService {\n  baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  getUsersWithRoles(): Observable<Partial<User[]>> {\n    return this.http.get<Partial<User[]>>(\n      `${this.baseUrl}admin/users-with-roles`\n    );\n  }\n\n  updateUserRoles(username: string, roles: string[]): Observable<object> {\n    return this.http.post(\n      `${this.baseUrl}admin/edit-roles/${username}?roles=${roles}`,\n      {}\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'https://localhost:5001/api/',\n  hubUrl: 'https://localhost:5001/hubs/',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","// Libs\nimport { Component, OnInit } from '@angular/core';\n\n// Models\nimport { Message } from '../models/message';\nimport { Pagination } from '../models/pagination';\n\n// Services\nimport { ConfirmService } from '../services/confirm.service';\nimport { MessageService } from '../services/message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css'],\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[];\n  pagination: Pagination;\n  container = 'Unread';\n  pageNumber = 1;\n  pageSize = 5;\n  loading = false;\n\n  constructor(\n    private messageService: MessageService,\n    private confirmService: ConfirmService\n  ) {}\n\n  ngOnInit(): void {\n    this.loadMessages();\n  }\n\n  loadMessages(): void {\n    this.loading = true;\n    this.messageService\n      .getMessages(this.pageNumber, this.pageSize, this.container)\n      .subscribe((response) => {\n        this.messages = response.result;\n        this.pagination = response.pagination;\n        this.loading = false;\n      });\n  }\n\n  deleteMessage(id: number): void {\n    this.confirmService\n      .confirm('Confirm delete message', 'This cannot be undone')\n      .subscribe((result) => {\n        if (result) {\n          this.messageService.deleteMessage(id).subscribe(() => {\n            this.messages.splice(\n              this.messages.findIndex((message) => message.id === id),\n              1\n            );\n          });\n        }\n      });\n  }\n\n  pageChanged(event: any): void {\n    this.pageNumber = event.page;\n    this.loadMessages();\n  }\n}\n","<div class=\"row mb-4\">\n  <div class=\"btn-group\" name=\"container\">\n    <button\n      class=\"btn btn-primary\"\n      btnRadio=\"Unread\"\n      [(ngModel)]=\"container\"\n      (click)=\"loadMessages()\"\n    >\n      <i class=\"fa fa-envelope\"></i> Unread\n    </button>\n    <button\n      class=\"btn btn-primary\"\n      btnRadio=\"Inbox\"\n      [(ngModel)]=\"container\"\n      (click)=\"loadMessages()\"\n    >\n      <i class=\"fa fa-envelope-open\"></i> Inbox\n    </button>\n    <button\n      class=\"btn btn-primary\"\n      btnRadio=\"Outbox\"\n      [(ngModel)]=\"container\"\n      (click)=\"loadMessages()\"\n    >\n      <i class=\"fa fa-paper-plane\"></i> Outbox\n    </button>\n  </div>\n</div>\n\n<div class=\"row\" *ngIf=\"messages?.length === 0\">\n  <h3>No messages</h3>\n</div>\n\n<div class=\"row\" *ngIf=\"messages?.length > 0\">\n  <table class=\"table table-hover\" style=\"cursor: pointer\">\n    <tr>\n      <th style=\"width: 20%\">From / To</th>\n      <th style=\"width: 40%\">Message</th>\n      <th style=\"width: 20%\">Sent / Received</th>\n      <th style=\"width: 20%\"></th>\n    </tr>\n    <tr\n      [hidden]=\"loading\"\n      *ngFor=\"let message of messages\"\n      routerLink=\"{{\n        container === 'Outbox'\n          ? '/members/' + message.recipientUsername\n          : '/members/' + message.senderUsername\n      }}\"\n      [queryParams]=\"{ tab: 3 }\"\n    >\n      <td>\n        <div *ngIf=\"container === 'Outbox'\">\n          <img\n            class=\"img-circle rounded-circle mr-2\"\n            src=\"{{ message.recipientPhotoUrl || './assets/user.png' }}\"\n            alt=\"{{ message.recipientUsername }}\"\n          />\n          <strong>{{ message.recipientUsername | titlecase }}</strong>\n        </div>\n        <div *ngIf=\"container !== 'Outbox'\">\n          <img\n            class=\"img-circle rounded-circle mr-2\"\n            src=\"{{ message.senderPhotoUrl || './assets/user.png' }}\"\n            alt=\"{{ message.senderUsername }}\"\n          />\n          <strong>{{ message.senderUsername | titlecase }}</strong>\n        </div>\n      </td>\n      <td>{{ message.content }}</td>\n      <td>{{ message.messageSent | timeago }}</td>\n      <td>\n        <button\n          (click)=\"$event.stopPropagation()\"\n          (click)=\"deleteMessage(message.id)\"\n          class=\"btn btn-danger\"\n        >\n          Delete\n        </button>\n      </td>\n    </tr>\n  </table>\n</div>\n\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination && !loading\">\n  <pagination\n    [boundaryLinks]=\"true\"\n    [totalItems]=\"pagination.totalItems\"\n    [itemsPerPage]=\"pagination.itemsPerPage\"\n    [(ngModel)]=\"pagination.currentPage\"\n    (pageChanged)=\"pageChanged($event)\"\n    previousText=\"&lsaquo;\"\n    nextText=\"&rsaquo;\"\n    firstText=\"&laquo;\"\n    lastText=\"&raquo;\"\n  >\n  </pagination>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BusyService {\r\n  busyRequestCount = 0;\r\n\r\n  constructor(private spinnerService: NgxSpinnerService) {}\r\n\r\n  busy(): void {\r\n    this.busyRequestCount++;\r\n\r\n    this.spinnerService.show(undefined, {\r\n      type: 'line-scale-party',\r\n      bdColor: 'rgba(255,255,255,0)',\r\n      color: '#333333',\r\n    });\r\n  }\r\n\r\n  idle(): void {\r\n    this.busyRequestCount--;\r\n\r\n    if (this.busyRequestCount <= 0) {\r\n      this.busyRequestCount = 0;\r\n      this.spinnerService.hide();\r\n    }\r\n  }\r\n}\r\n","// Libs\nimport { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { RolesModalComponent } from 'src/app/modals/roles-modal/roles-modal.component';\n\n// Models\nimport { User } from 'src/app/models/user';\n\n// Services\nimport { AdminService } from 'src/app/services/admin.service';\n\n@Component({\n  selector: 'app-user-management',\n  templateUrl: './user-management.component.html',\n  styleUrls: ['./user-management.component.css'],\n})\nexport class UserManagementComponent implements OnInit {\n  users: Partial<User[]>;\n  bsModalRef: BsModalRef;\n\n  constructor(\n    private adminService: AdminService,\n    private modalService: BsModalService\n  ) {}\n\n  ngOnInit(): void {\n    this.getUsersWithRoles();\n  }\n\n  getUsersWithRoles(): void {\n    this.adminService.getUsersWithRoles().subscribe((users) => {\n      this.users = users;\n    });\n  }\n\n  openRolesModal(user: User): void {\n    const config = {\n      class: 'modal-dialog-centered',\n      initialState: {\n        user,\n        roles: this.getRolesArray(user),\n      },\n    };\n\n    this.bsModalRef = this.modalService.show(RolesModalComponent, config);\n    this.bsModalRef.content.updateSelectedRoles.subscribe((values) => {\n      const rolesToUpdate = {\n        roles: [\n          ...values.filter((el) => el.checked === true).map((el) => el.name),\n        ],\n      };\n\n      if (rolesToUpdate) {\n        this.adminService\n          .updateUserRoles(user.userName, rolesToUpdate.roles)\n          .subscribe(() => {\n            user.roles = [...rolesToUpdate.roles];\n          });\n      }\n    });\n  }\n\n  private getRolesArray(user: User): any[] {\n    const roles = [];\n    const userRoles = user.roles;\n    const availableRoles: any[] = [\n      { name: 'Admin', value: 'Admin' },\n      { name: 'Moderator', value: 'Moderator' },\n      { name: 'Member', value: 'Member' },\n    ];\n\n    availableRoles.forEach((role) => {\n      let isMatch = false;\n\n      for (const userRole of userRoles) {\n        if (role.name === userRole) {\n          isMatch = true;\n          role.checked = true;\n          roles.push(role);\n          break;\n        }\n      }\n\n      if (!isMatch) {\n        role.checked = false;\n        roles.push(role);\n      }\n    });\n\n    return roles;\n  }\n}\n","<div class=\"row\">\n  <table class=\"table\">\n    <tr>\n      <th style=\"width: 30%\">Username</th>\n      <th style=\"width: 40%\">Active Roles</th>\n      <th style=\"width: 30%\"></th>\n    </tr>\n    <tr *ngFor=\"let user of users\">\n      <td>{{ user.userName }}</td>\n      <td>{{ user.roles }}</td>\n      <td>\n        <button (click)=\"openRolesModal(user)\" class=\"btn btn-info\">\n          Edit Roles\n        </button>\n      </td>\n    </tr>\n  </table>\n</div>\n","// Libs\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  NgxGalleryAnimation,\n  NgxGalleryImage,\n  NgxGalleryOptions,\n} from '@kolkov/ngx-gallery';\nimport { take } from 'rxjs/operators';\nimport { TabDirective, TabsetComponent } from 'ngx-bootstrap/tabs';\n\n// Models\nimport { Member } from 'src/app/models/member';\nimport { Message } from 'src/app/models/message';\nimport { User } from 'src/app/models/user';\n\n// Services\nimport { MessageService } from 'src/app/services/message.service';\nimport { PresenceService } from 'src/app/services/presence.service';\nimport { AccountService } from 'src/app/services/account.service';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css'],\n})\nexport class MemberDetailComponent implements OnInit, OnDestroy {\n  @ViewChild('memberTabs', { static: true }) memberTabs: TabsetComponent;\n  member: Member;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n  activeTab: TabDirective;\n  messages: Message[] = [];\n  user: User;\n\n  constructor(\n    public presence: PresenceService,\n    private messageService: MessageService,\n    private route: ActivatedRoute,\n    private accountService: AccountService,\n    private router: Router\n  ) {\n    this.accountService.currentUser$\n      .pipe(take(1))\n      .subscribe((user) => (this.user = user));\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n  }\n\n  ngOnInit(): void {\n    this.route.data.subscribe((data) => {\n      this.member = data.member;\n    });\n\n    this.route.queryParams.subscribe((params) => {\n      params.tab ? this.selectTab(params.tab) : this.selectTab(0);\n    });\n\n    this.galleryOptions = [\n      {\n        width: '500px',\n        height: '500px',\n        imagePercent: 100,\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide,\n        preview: false,\n      },\n    ];\n\n    this.galleryImages = this.getImages();\n  }\n\n  getImages(): NgxGalleryImage[] {\n    const imageUrls = [];\n\n    for (const photo of this.member.photos) {\n      imageUrls.push({\n        small: photo?.url,\n        medium: photo?.url,\n        big: photo?.url,\n      });\n    }\n\n    return imageUrls;\n  }\n\n  loadMessages(): void {\n    this.messageService\n      .getMessageThread(this.member.username)\n      .subscribe((messages) => {\n        this.messages = messages;\n      });\n  }\n\n  selectTab(tabId: number): void {\n    this.memberTabs.tabs[tabId].active = true;\n  }\n\n  onTabActivated(data: TabDirective): void {\n    this.activeTab = data;\n\n    if (this.activeTab.heading === 'Messages' && this.messages.length === 0) {\n      this.messageService.createHubConnection(this.user, this.member.username);\n    } else {\n      this.messageService.stopHubConnection();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.messageService.stopHubConnection();\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-4\">\n    <div class=\"card\">\n      <img\n        src=\"{{ member.photoUrl || './assets/user.png' }}\"\n        alt=\"{{ member.knownAs }}\"\n        class=\"card-image-top img-thumbnail\"\n      />\n      <div class=\"card-body\">\n        <div\n          class=\"mb-2\"\n          *ngIf=\"(presence.onlineUsers$ | async).includes(member.username)\"\n        >\n          <i class=\"fa fa-user-circle text-success\"></i> Online now\n        </div>\n        <div>\n          <strong>Location: </strong>\n          <p>{{ member.city }}, {{ member.country }}</p>\n        </div>\n        <div>\n          <strong>Age: </strong>\n          <p>{{ member.age }}</p>\n        </div>\n        <div>\n          <strong>Last active: </strong>\n          <p>{{ member.lastActive | timeago }}</p>\n        </div>\n        <div>\n          <strong>Member since: </strong>\n          <p>{{ member.created | date }}</p>\n        </div>\n      </div>\n      <div class=\"card-footer\">\n        <div class=\"btn-group d-flex\">\n          <button class=\"btn btn-primary\">Like</button>\n          <button (click)=\"selectTab(3)\" class=\"btn btn-success\">\n            Message\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"col-8\">\n    <tabset class=\"member-tabset\" #memberTabs>\n      <tab\n        heading=\"About {{ member.knownAs }}\"\n        (selectTab)=\"onTabActivated($event)\"\n      >\n        <h4>Description</h4>\n        <p>{{ member.introduction }}</p>\n        <h4>Looking for</h4>\n        <p>{{ member.lookingFor }}</p>\n      </tab>\n      <tab heading=\"Interests\" (selectTab)=\"onTabActivated($event)\">\n        <h4>Interests</h4>\n        <p>{{ member.interests }}</p>\n      </tab>\n      <tab heading=\"Photos\" (selectTab)=\"onTabActivated($event)\">\n        <ngx-gallery\n          [options]=\"galleryOptions\"\n          [images]=\"galleryImages\"\n          class=\"ngx-gallery\"\n        ></ngx-gallery>\n      </tab>\n      <tab heading=\"Messages\" (selectTab)=\"onTabActivated($event)\">\n        <app-member-messages [username]=\"member.username\"></app-member-messages>\n      </tab>\n    </tabset>\n  </div>\n</div>\n","// libs\nimport { Component, OnInit } from '@angular/core';\n\n// models\nimport { Member } from 'src/app/models/member';\nimport { Pagination } from 'src/app/models/pagination';\nimport { User } from 'src/app/models/user';\nimport { UserParams } from 'src/app/models/userParams';\n\n// services\nimport { MembersService } from 'src/app/services/members.service';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css'],\n})\nexport class MemberListComponent implements OnInit {\n  members: Member[];\n  pagination: Pagination;\n  userParams: UserParams;\n  user: User;\n  genderList = [\n    { value: 'male', display: 'Male' },\n    { value: 'female', display: 'Female' },\n  ];\n\n  constructor(private memberService: MembersService) {\n    this.userParams = this.memberService.getUserParams();\n  }\n\n  ngOnInit(): void {\n    this.loadMembers();\n  }\n\n  loadMembers(): void {\n    this.memberService.setUserParams(this.userParams);\n\n    this.memberService.getMembers(this.userParams).subscribe((response) => {\n      this.members = response.result;\n      this.pagination = response.pagination;\n    });\n  }\n\n  resetFilters(): void {\n    this.userParams = this.memberService.resetUserParams();\n    this.loadMembers();\n  }\n\n  pageChanged(event: any): void {\n    this.userParams.pageNumber = event.page;\n    this.memberService.setUserParams(this.userParams);\n    this.loadMembers();\n  }\n}\n","<div class=\"text-center mt-3\">\n  <h2>Your matches - {{ pagination?.totalItems }} found</h2>\n</div>\n\n<div class=\"container mt-3\">\n  <form\n    #form=\"ngForm\"\n    class=\"form-inline mb-3\"\n    (ngSubmit)=\"loadMembers()\"\n    autocomplete=\"off\"\n  >\n    <div class=\"form-group\">\n      <label>Age from: </label>\n      <input\n        type=\"number\"\n        class=\"form-control ml-1\"\n        style=\"width: 70px\"\n        name=\"minAge\"\n        [(ngModel)]=\"userParams.minAge\"\n      />\n    </div>\n\n    <div class=\"form-group px-2\">\n      <label>Age to: </label>\n      <input\n        type=\"number\"\n        class=\"form-control ml-1\"\n        style=\"width: 70px\"\n        name=\"maxAge\"\n        [(ngModel)]=\"userParams.maxAge\"\n      />\n    </div>\n\n    <div class=\"form-group px-2\">\n      <label>Show: </label>\n\n      <select\n        name=\"gender\"\n        style=\"width: 130px\"\n        class=\"form-control ml-1\"\n        [(ngModel)]=\"userParams.gender\"\n      >\n        <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\n          {{ gender.display }}\n        </option>\n      </select>\n    </div>\n\n    <button class=\"btn btn-primary ml-1\" type=\"submit\">Apply Filters</button>\n    <button (click)=\"resetFilters()\" class=\"btn btn-info ml-1\" type=\"submit\">\n      Reset Filters\n    </button>\n\n    <div class=\"col\">\n      <div class=\"btn-group float-right\">\n        <button\n          type=\"button\"\n          class=\"btn btn-primary\"\n          name=\"orderBy\"\n          (click)=\"loadMembers()\"\n          btnRadio=\"lastActive\"\n          [(ngModel)]=\"userParams.orderBy\"\n        >\n          Last Active\n        </button>\n\n        <button\n          type=\"button\"\n          class=\"btn btn-primary\"\n          name=\"orderBy\"\n          (click)=\"loadMembers()\"\n          btnRadio=\"created\"\n          [(ngModel)]=\"userParams.orderBy\"\n        >\n          Newest Members\n        </button>\n      </div>\n    </div>\n  </form>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-2\" *ngFor=\"let member of members\">\n    <app-member-card [member]=\"member\"></app-member-card>\n  </div>\n</div>\n\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\n  <pagination\n    [boundaryLinks]=\"true\"\n    [totalItems]=\"pagination.totalItems\"\n    [itemsPerPage]=\"pagination.itemsPerPage\"\n    [(ngModel)]=\"pagination.currentPage\"\n    (pageChanged)=\"pageChanged($event)\"\n    previousText=\"&lsaquo;\"\n    nextText=\"&rsaquo;\"\n    firstText=\"&laquo;\"\n    lastText=\"&raquo;\"\n  >\n  </pagination>\n</div>\n","// Libs\nimport { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n// Services\nimport { ConfirmService } from '../services/confirm.service';\n\n// Components\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\n  constructor(private confirmService: ConfirmService) {}\n\n  canDeactivate(component: MemberEditComponent): Observable<boolean> | boolean {\n    if (component.editForm.dirty) {\n      return this.confirmService.confirm();\n    }\n\n    return true;\n  }\n}\n","export interface Pagination {\n  currentPage: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n  result: T;\n  pagination: Pagination;\n}\n","// libs\nimport { Component, OnInit } from '@angular/core';\n\n// models\nimport { User } from './models/user';\n\n// services\nimport { AccountService } from './services/account.service';\nimport { PresenceService } from './services/presence.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  title = 'The Dating App';\n  users: any;\n\n  constructor(\n    private accountService: AccountService,\n    private presence: PresenceService\n  ) {}\n\n  ngOnInit(): void {\n    this.setCurrentUser();\n  }\n\n  setCurrentUser(): void {\n    const user: User = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      this.accountService.setCurrentUser(user);\n      this.presence.createHubConnection(user);\n    }\n  }\n}\n","<ngx-spinner>\r\n  <h3>Loading...</h3>\r\n</ngx-spinner>\r\n\r\n<app-nav></app-nav>\r\n\r\n<div class=\"container\" style=\"margin-top: 100px\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","// Libs\nimport { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n// Services\nimport { AccountService } from '../services/account.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminGuard implements CanActivate {\n  constructor(\n    private accountService: AccountService,\n    private toastr: ToastrService\n  ) {}\n\n  canActivate(): Observable<boolean> {\n    return this.accountService.currentUser$.pipe(\n      map((user) => {\n        if (user.roles.includes('Admin') || user.roles.includes('Moderator')) {\n          return true;\n        }\n\n        this.toastr.error('You cannot enter this area');\n      })\n    );\n  }\n}\n","// libs\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n// services\r\nimport { AccountService } from '../services/account.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.accountService.currentUser$.pipe(\r\n      map((user) => {\r\n        if (user) {\r\n          return true;\r\n        }\r\n\r\n        this.toastr.error('You shall not pass!');\r\n      })\r\n    );\r\n  }\r\n}\r\n","// Libs\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n// Modules\nimport { AppRoutingModule } from './app-routing.module';\nimport { SharedModule } from './modules/shared.module';\n\n// Components\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { ErrorInterceptor } from './interceptors/error.interceptor';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { JwtInterceptor } from './interceptors/jwt.interceptor';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { LoadingInterceptor } from './interceptors/loading.interceptor';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { TextInputComponent } from './forms/text-input/text-input.component';\nimport { DateInputComponent } from './forms/date-input/date-input.component';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { HasRoleDirective } from './directives/has-role.directive';\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\nimport { RolesModalComponent } from './modals/roles-modal/roles-modal.component';\nimport { ConfirmDialogComponent } from './modals/confirm-dialog/confirm-dialog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    HomeComponent,\n    RegisterComponent,\n    MemberListComponent,\n    MemberDetailComponent,\n    ListsComponent,\n    MessagesComponent,\n    NotFoundComponent,\n    ServerErrorComponent,\n    MemberCardComponent,\n    MemberEditComponent,\n    PhotoEditorComponent,\n    TextInputComponent,\n    DateInputComponent,\n    MemberMessagesComponent,\n    AdminPanelComponent,\n    HasRoleDirective,\n    UserManagementComponent,\n    PhotoManagementComponent,\n    RolesModalComponent,\n    ConfirmDialogComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    NgxSpinnerModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","// libs\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { FileUploader } from 'ng2-file-upload';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// models\r\nimport { Member } from 'src/app/models/member';\r\nimport { AccountService } from 'src/app/services/account.service';\r\nimport { User } from 'src/app/models/user';\r\nimport { take } from 'rxjs/operators';\r\nimport { MembersService } from 'src/app/services/members.service';\r\nimport { Photo } from 'src/app/models/photo';\r\n\r\n@Component({\r\n  selector: 'app-photo-editor',\r\n  templateUrl: './photo-editor.component.html',\r\n  styleUrls: ['./photo-editor.component.css'],\r\n})\r\nexport class PhotoEditorComponent implements OnInit {\r\n  @Input() member: Member;\r\n  uploader: FileUploader;\r\n  hasBaseDropZoneOver = false;\r\n  baseUrl = environment.apiUrl;\r\n  user: User;\r\n\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private membersService: MembersService\r\n  ) {\r\n    this.accountService.currentUser$\r\n      .pipe(take(1))\r\n      .subscribe((user) => (this.user = user));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeUploader();\r\n  }\r\n\r\n  fileOverBase(event: any): void {\r\n    this.hasBaseDropZoneOver = event;\r\n  }\r\n\r\n  setMainPhoto(photo: Photo): void {\r\n    this.membersService.setMainPhoto(photo.id).subscribe(() => {\r\n      this.user.photoUrl = photo.url;\r\n      this.accountService.setCurrentUser(this.user);\r\n      this.member.photoUrl = photo.url;\r\n      this.member.photos.forEach((p) => {\r\n        if (p.isMain) {\r\n          p.isMain = false;\r\n        }\r\n\r\n        if (photo.id === p.id) {\r\n          p.isMain = true;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  deletePhoto(photoId: number): void {\r\n    this.membersService.deletePhoto(photoId).subscribe(() => {\r\n      this.member.photos = this.member.photos.filter(\r\n        (photo) => photo.id !== photoId\r\n      );\r\n    });\r\n  }\r\n\r\n  initializeUploader(): void {\r\n    this.uploader = new FileUploader({\r\n      url: `${this.baseUrl}users/add-photo`,\r\n      authToken: `Bearer ${this.user.token}`,\r\n      isHTML5: true,\r\n      allowedFileType: ['image'],\r\n      removeAfterUpload: true,\r\n      autoUpload: false,\r\n      maxFileSize: 10 * 1024 * 1024,\r\n    });\r\n\r\n    this.uploader.onAfterAddingFile = (file) => {\r\n      file.withCredentials = false;\r\n    };\r\n\r\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\r\n      if (response) {\r\n        const photo: Photo = JSON.parse(response);\r\n\r\n        this.member.photos.push(photo);\r\n\r\n        if (photo.isMain) {\r\n          this.user.photoUrl = photo.url;\r\n          this.member.photoUrl = photo.url;\r\n          this.accountService.setCurrentUser(this.user);\r\n        }\r\n      }\r\n    };\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-2\" *ngFor=\"let photo of member.photos\">\r\n    <img\r\n      src=\"{{ photo.url }}\"\r\n      alt=\"{{ photo.url }}\"\r\n      class=\"img-thumbnail p-1\"\r\n    />\r\n    <div class=\"text-center\">\r\n      <button\r\n        [disabled]=\"photo.isMain\"\r\n        (click)=\"setMainPhoto(photo)\"\r\n        [ngClass]=\"\r\n          photo.isMain ? 'btn-success active' : 'btn-outline btn-success'\r\n        \"\r\n        class=\"btn btn-sm\"\r\n      >\r\n        Main\r\n      </button>\r\n      <button\r\n        [disabled]=\"photo.isMain\"\r\n        (click)=\"deletePhoto(photo.id)\"\r\n        class=\"btn btn-sm btn-danger\"\r\n      >\r\n        <i class=\"fa fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row mt-3\">\r\n  <div class=\"col-md-3\">\r\n    <h3>Add photos</h3>\r\n    <div\r\n      ng2FileDrop\r\n      [ngClass]=\"{ 'nv-file-over': hasBaseDropZoneOver }\"\r\n      (fileOver)=\"fileOverBase($event)\"\r\n      [uploader]=\"uploader\"\r\n      class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\"\r\n    >\r\n      <i class=\"fa fa-upload fa-3x\"></i>\r\n      Drop photos here\r\n    </div>\r\n    Multiple\r\n    <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple /><br />\r\n    Single\r\n    <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\r\n  </div>\r\n\r\n  <div\r\n    class=\"col-md-9\"\r\n    style=\"margin-bottom: 40px\"\r\n    *ngIf=\"uploader?.queue?.length\"\r\n  >\r\n    <h3>Upload queue</h3>\r\n    <p>Queue length: {{ uploader?.queue?.length }}</p>\r\n    <table class=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th width=\"50%\">Name</th>\r\n          <th>Size</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let item of uploader.queue\">\r\n          <td>\r\n            <strong>{{ item?.file?.name }}</strong>\r\n          </td>\r\n          <td *ngIf=\"uploader.options.isHTML5\" nowrap>\r\n            {{ item?.file?.size / 1024 / 1024 | number: '.2' }} MB\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <div>\r\n      <div>\r\n        Queue progress:\r\n        <div class=\"progress\">\r\n          <div\r\n            class=\"progress-bar\"\r\n            role=\"progressbar\"\r\n            [ngStyle]=\"{ width: uploader.progress + '%' }\"\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-success btn-s\"\r\n        (click)=\"uploader.uploadAll()\"\r\n        [disabled]=\"!uploader.getNotUploadedItems().length\"\r\n      >\r\n        <span class=\"fa fa-upload\"></span> Upload all\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-warning btn-s\"\r\n        (click)=\"uploader.cancelAll()\"\r\n        [disabled]=\"!uploader.isUploading\"\r\n      >\r\n        <span class=\"fa fa-ban\"></span> Cancel all\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-danger btn-s\"\r\n        (click)=\"uploader.clearQueue()\"\r\n        [disabled]=\"!uploader.queue.length\"\r\n      >\r\n        <span class=\"fa fa-trash\"></span> Remove all\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","// libs\nimport { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { delay, finalize } from 'rxjs/operators';\n\n// services\nimport { BusyService } from '../services/busy.service';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n  constructor(private busyService: BusyService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    this.busyService.busy();\n\n    return next.handle(request).pipe(\n      finalize(() => {\n        this.busyService.idle();\n      })\n    );\n  }\n}\n","// Libs\nimport {\n  Directive,\n  Input,\n  OnInit,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { take } from 'rxjs/operators';\n\n// Models\nimport { User } from '../models/user';\n\n// Services\nimport { AccountService } from '../services/account.service';\n\n@Directive({\n  selector: '[appHasRole]',\n})\nexport class HasRoleDirective implements OnInit {\n  @Input() appHasRole: string[];\n  user: User;\n\n  constructor(\n    private viewContainerRef: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    private accountService: AccountService\n  ) {\n    this.accountService.currentUser$.pipe(take(1)).subscribe((user) => {\n      this.user = user;\n    });\n  }\n\n  ngOnInit(): void {\n    if (!this.user?.roles || this.user == null) {\n      this.viewContainerRef.clear();\n\n      return;\n    }\n\n    if (this.user?.roles.some((role) => this.appHasRole.includes(role))) {\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n    } else {\n      this.viewContainerRef.clear();\n    }\n  }\n}\n","// Libs\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n// Models\nimport { DecodedToken } from '../models/decodedToken';\nimport { User } from '../models/user';\nimport { PresenceService } from './presence.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountService {\n  baseUrl = environment.apiUrl;\n  private currentUserSource = new ReplaySubject<User>(1);\n  currentUser$ = this.currentUserSource.asObservable();\n\n  constructor(private http: HttpClient, private presence: PresenceService) {}\n\n  login(model: any): any {\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(\n      map((response: User) => {\n        const user = response;\n        if (user) {\n          this.setCurrentUser(user);\n          this.presence.createHubConnection(user);\n        }\n      })\n    );\n  }\n\n  register(model: any): any {\n    return this.http.post(this.baseUrl + 'account/register', model).pipe(\n      map((user: User) => {\n        if (user) {\n          this.setCurrentUser(user);\n          this.presence.createHubConnection(user);\n        }\n      })\n    );\n  }\n\n  setCurrentUser(user: User): void {\n    user.roles = [];\n    const roles = this.getDecodedToken(user.token).role;\n    Array.isArray(roles) ? (user.roles = roles) : user.roles.push(roles);\n\n    localStorage.setItem('user', JSON.stringify(user));\n\n    this.currentUserSource.next(user);\n  }\n\n  logout(): void {\n    localStorage.removeItem('user');\n    this.currentUserSource.next(null);\n    this.presence.stopHubConnection();\n  }\n\n  getDecodedToken(token: string): DecodedToken {\n    return JSON.parse(atob(token.split('.')[1]));\n  }\n}\n","// libs\nimport { Component, OnInit } from '@angular/core';\n\n// models\nimport { Member } from '../models/member';\nimport { Pagination } from '../models/pagination';\nimport { MembersService } from '../services/members.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css'],\n})\nexport class ListsComponent implements OnInit {\n  members: Partial<Member[]>;\n  predicate = 'liked';\n  pageNumber = 1;\n  pageSize = 5;\n  pagination: Pagination;\n\n  constructor(private memberService: MembersService) {}\n\n  ngOnInit(): void {\n    this.loadLikes();\n  }\n\n  loadLikes(): void {\n    this.memberService\n      .getLikes(this.predicate, this.pageNumber, this.pageSize)\n      .subscribe((response) => {\n        this.members = response.result;\n        this.pagination = response.pagination;\n      });\n  }\n\n  pageChanged(event: any): void {\n    this.pageNumber = event.page;\n    this.loadLikes();\n  }\n}\n","<div class=\"text-center mt-3\">\n  <h2>\n    {{ predicate === 'liked' ? 'Members I like' : 'Members who liked me' }}\n  </h2>\n</div>\n\n<div class=\"container mt-3\">\n  <div class=\"row\">\n    <div class=\"btn-group\" name=\"predicate\">\n      <button\n        class=\"btn btn-primary\"\n        btnRadio=\"liked\"\n        [(ngModel)]=\"predicate\"\n        (click)=\"loadLikes()\"\n      >\n        Members I like\n      </button>\n      <button\n        class=\"btn btn-primary\"\n        btnRadio=\"likedBy\"\n        [(ngModel)]=\"predicate\"\n        (click)=\"loadLikes()\"\n      >\n        Members who like me\n      </button>\n    </div>\n  </div>\n\n  <div class=\"row mt-3\">\n    <div class=\"col-2\" *ngFor=\"let member of members\">\n      <app-member-card [member]=\"member\"></app-member-card>\n    </div>\n  </div>\n</div>\n\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\n  <pagination\n    [boundaryLinks]=\"true\"\n    [totalItems]=\"pagination.totalItems\"\n    [itemsPerPage]=\"pagination.itemsPerPage\"\n    [(ngModel)]=\"pagination.currentPage\"\n    (pageChanged)=\"pageChanged($event)\"\n    previousText=\"&lsaquo;\"\n    nextText=\"&rsaquo;\"\n    firstText=\"&laquo;\"\n    lastText=\"&raquo;\"\n  >\n  </pagination>\n</div>\n","// libs\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n// services\r\nimport { AccountService } from '../services/account.service';\r\nimport { User } from '../models/user';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n  constructor(private accountService: AccountService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<unknown>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<unknown>> {\r\n    let currentUser: User;\r\n\r\n    this.accountService.currentUser$\r\n      .pipe(take(1))\r\n      .subscribe((user) => (currentUser = user));\r\n\r\n    if (currentUser) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${currentUser.token}`,\r\n        },\r\n      });\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","// libs\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n// services\r\nimport { AccountService } from '../services/account.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css'],\r\n})\r\nexport class NavComponent implements OnInit {\r\n  model: any = {};\r\n\r\n  constructor(public accountService: AccountService, private router: Router) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  login(): void {\r\n    this.accountService.login(this.model).subscribe((response) => {\r\n      this.router.navigateByUrl('/members');\r\n    });\r\n  }\r\n\r\n  logout(): void {\r\n    this.accountService.logout();\r\n    this.router.navigateByUrl('/');\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-primary\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/\">Dating App</a>\n    <ul class=\"navbar-nav mr-auto\">\n      <ng-container *ngIf=\"accountService.currentUser$ | async\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/members\" routerLinkActive=\"active\"\n            >Matches</a\n          >\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/lists\" routerLinkActive=\"active\"\n            >Lists</a\n          >\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/messages\" routerLinkActive=\"active\"\n            >Messages</a\n          >\n        </li>\n      </ng-container>\n      <li *appHasRole=\"['Admin', 'Moderator']\" class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/admin\" routerLinkActive=\"active\"\n          >Admin</a\n        >\n      </li>\n    </ul>\n\n    <div\n      class=\"dropdown\"\n      *ngIf=\"accountService.currentUser$ | async as user\"\n      dropdown\n    >\n      <a class=\"dropdown-toggle text-light mr-2\" dropdownToggle\n        >Welcome {{ user.knownAs || user.userName | titlecase }}</a\n      >\n      <img\n        src=\"{{ user.photoUrl ? user.photoUrl : '../assets/user.png' }}\"\n        alt=\"{{ user.userName }}\"\n      />\n      <div class=\"dropdown-menu mt-3\" *dropdownMenu>\n        <a class=\"dropdown-item\" routerLink=\"/member/edit\">Edit Profile</a>\n        <div class=\"dropdown-divider\"></div>\n        <a class=\"dropdown-item\" (click)=\"logout()\">Logout</a>\n      </div>\n    </div>\n\n    <form\n      *ngIf=\"(accountService.currentUser$ | async) === null\"\n      #loginForm=\"ngForm\"\n      class=\"form-inline mt-2 mt-md-0\"\n      (ngSubmit)=\"login()\"\n      autocomplete=\"off\"\n    >\n      <input\n        name=\"username\"\n        [(ngModel)]=\"model.username\"\n        class=\"form-control mr-sm-2\"\n        type=\"text\"\n        placeholder=\"Username\"\n      />\n      <input\n        name=\"password\"\n        [(ngModel)]=\"model.password\"\n        class=\"form-control mr-sm-2\"\n        type=\"password\"\n        placeholder=\"Password\"\n      />\n      <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">Login</button>\n    </form>\n  </div>\n</nav>\n","// libs\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { ToastrModule } from 'ngx-toastr';\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TimeagoModule } from 'ngx-timeago';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BsDropdownModule.forRoot(),\n    ToastrModule.forRoot({\n      positionClass: 'toast-bottom-right',\n    }),\n    TabsModule.forRoot(),\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule.forRoot(),\n    PaginationModule.forRoot(),\n    ButtonsModule.forRoot(),\n    TimeagoModule.forRoot(),\n    ModalModule.forRoot(),\n  ],\n  exports: [\n    BsDropdownModule,\n    ToastrModule,\n    TabsModule,\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule,\n    PaginationModule,\n    ButtonsModule,\n    TimeagoModule,\n    ModalModule,\n  ],\n})\nexport class SharedModule {}\n","// Libs\nimport { Component, Input, OnInit } from '@angular/core';\n\n// Models\nimport { Member } from 'src/app/models/member';\n\n// Services\nimport { ToastrService } from 'ngx-toastr';\nimport { MembersService } from 'src/app/services/members.service';\nimport { PresenceService } from 'src/app/services/presence.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css'],\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() member: Member;\n\n  constructor(\n    private memberService: MembersService,\n    private toastr: ToastrService,\n    public presence: PresenceService\n  ) {}\n\n  ngOnInit(): void {}\n\n  addLike(member: Member): void {\n    this.memberService.addLike(member.username).subscribe(() => {\n      this.toastr.success(`You have liked ${member.knownAs}`);\n    });\n  }\n}\n","<div class=\"card mb-4\">\n  <div class=\"card-img-wrapper\">\n    <img\n      src=\"{{ member.photoUrl || './assets/user.png' }}\"\n      alt=\"{{ member.knownAs }}\"\n      class=\"card-img-top\"\n    />\n\n    <ul class=\"list-inline member-icons animate text-center\">\n      <li class=\"list-inline-item\">\n        <button\n          routerLink=\"/members/{{ member.username }}\"\n          class=\"btn btn-primary\"\n        >\n          <i class=\"fa fa-user\"></i>\n        </button>\n      </li>\n\n      <li class=\"list-inline-item\">\n        <button (click)=\"addLike(member)\" class=\"btn btn-primary\">\n          <i class=\"fa fa-heart\"></i>\n        </button>\n      </li>\n\n      <li class=\"list-inline-item\">\n        <button\n          routerLink=\"/members/{{ member.username }}\"\n          [queryParams]=\"{ tab: 3 }\"\n          class=\"btn btn-primary\"\n        >\n          <i class=\"fa fa-envelope\"></i>\n        </button>\n      </li>\n    </ul>\n  </div>\n\n  <div class=\"card-body p-1\">\n    <h6 class=\"card-title text-center mb-1\">\n      <span\n        [class.is-online]=\"\n          (presence.onlineUsers$ | async).includes(member.username)\n        \"\n      >\n        <i class=\"fa fa-user mr-2\"></i>\n      </span>\n      {{ member.knownAs }}, {{ member.age }}\n    </h6>\n\n    <p class=\"card-text text-muted text-center\">{{ member.city }}</p>\n  </div>\n</div>\n","// Libs\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n// Models\nimport { Member } from '../models/member';\nimport { MembersService } from '../services/members.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MemberDetailResolver implements Resolve<Member> {\n  constructor(private memberService: MembersService) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<Member> {\n    return this.memberService.getMember(route.paramMap.get('username'));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css'],\n})\nexport class AdminPanelComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<h2>Admin Panel</h2>\n\n<div class=\"tab-panel\">\n  <tabset class=\"member-tabset\">\n    <tab heading=\"User management\" *appHasRole=\"['Admin']\">\n      <div class=\"container\">\n        <app-user-management></app-user-management>\n      </div>\n    </tab>\n    <tab heading=\"Photo management\" *appHasRole=\"['Admin', 'Moderator']\">\n      <div class=\"container\">\n        <app-photo-management></app-photo-management>\n      </div>\n    </tab>\n  </tabset>\n</div>\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private router: Router, private toastr: ToastrService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    return next.handle(request).pipe(\n      catchError((error) => {\n        if (error) {\n          switch (error.status) {\n            case 400:\n              if (error.error.errors) {\n                const modalStateErrors = [];\n\n                for (const key in error.error.errors) {\n                  if (error.error.errors[key]) {\n                    modalStateErrors.push(error.error.errors[key]);\n                  }\n                }\n\n                throw modalStateErrors.flat();\n              } else if (typeof error.error === 'object') {\n                this.toastr.error(error.statusText, error.status);\n              } else {\n                this.toastr.error(error.error, error.status);\n              }\n              break;\n            case 401:\n              this.toastr.error(error.statusText, error.status);\n              break;\n            case 404:\n              this.router.navigateByUrl('/not-found');\n              break;\n            case 500:\n              const navigationExtras: NavigationExtras = {\n                state: { error: error.error },\n              };\n              this.router.navigateByUrl('/server-error', navigationExtras);\n              break;\n            default:\n              this.toastr.error('Something unexpected went wrong!');\n              console.log(error);\n              break;\n          }\n        }\n\n        return throwError(error);\n      })\n    );\n  }\n}\n","// Libs\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n// Models\nimport { Message } from '../models/message';\nimport { PaginatedResult } from '../models/pagination';\nimport { User } from '../models/user';\nimport { Group } from '../models/group';\n\n// Helpers\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  baseUrl = environment.apiUrl;\n  hubUrl = environment.hubUrl;\n  private hubConnection: HubConnection;\n  private messageThreadSource = new BehaviorSubject<Message[]>([]);\n  messageThread$ = this.messageThreadSource.asObservable();\n\n  constructor(private http: HttpClient) {}\n\n  createHubConnection(user: User, otherUsername: string): void {\n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(`${this.hubUrl}message?user=${otherUsername}`, {\n        accessTokenFactory: () => user.token,\n      })\n      .withAutomaticReconnect()\n      .build();\n\n    this.hubConnection.start().catch((error) => console.log(error));\n\n    this.hubConnection.on('ReceiveMessageThread', (messages) => {\n      this.messageThreadSource.next(messages);\n    });\n\n    this.hubConnection.on('NewMessage', (message) => {\n      this.messageThread$.pipe(take(1)).subscribe((messages) => {\n        this.messageThreadSource.next([...messages, message]);\n      });\n    });\n\n    this.hubConnection.on('UpdatedGroup', (group: Group) => {\n      if (group.connections.some((c) => c.username === otherUsername)) {\n        this.messageThread$.pipe(take(1)).subscribe((messages) => {\n          messages.forEach((message) => {\n            if (!message.dateRead) {\n              message.dateRead = new Date(Date.now());\n            }\n          });\n\n          this.messageThreadSource.next([...messages]);\n        });\n      }\n    });\n  }\n\n  stopHubConnection(): void {\n    if (this.hubConnection) {\n      this.hubConnection.stop();\n    }\n  }\n\n  getMessages(\n    pageNumber: number,\n    pageSize: number,\n    container\n  ): Observable<PaginatedResult<Message[]>> {\n    let params = getPaginationHeaders(pageNumber, pageSize);\n    params = params.append('Container', container);\n\n    return getPaginatedResult<Message[]>(\n      `${this.baseUrl}messages`,\n      params,\n      this.http\n    );\n  }\n\n  getMessageThread(username: string): Observable<Message[]> {\n    return this.http.get<Message[]>(\n      `${this.baseUrl}messages/thread/${username}`\n    );\n  }\n\n  async sendMessage(username: string, content: string): Promise<any> {\n    return this.hubConnection\n      .invoke('SendMessage', { recipientUsername: username, content })\n      .catch((error) => console.log(error));\n  }\n\n  deleteMessage(id: number): Observable<object> {\n    return this.http.delete(`${this.baseUrl}messages/${id}`);\n  }\n}\n","// libs\r\nimport { Component, HostListener, OnInit, ViewChild } from '@angular/core';\r\nimport { take } from 'rxjs/operators';\r\n\r\n// models\r\nimport { Member } from 'src/app/models/member';\r\nimport { User } from 'src/app/models/user';\r\n\r\n// services\r\nimport { AccountService } from 'src/app/services/account.service';\r\nimport { MembersService } from 'src/app/services/members.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-member-edit',\r\n  templateUrl: './member-edit.component.html',\r\n  styleUrls: ['./member-edit.component.css'],\r\n})\r\nexport class MemberEditComponent implements OnInit {\r\n  @ViewChild('editForm') editForm: NgForm;\r\n  member: Member;\r\n  user: User;\r\n  @HostListener('window:beforeunload', ['$event']) unloadNotification(\r\n    $event: any\r\n  ): void {\r\n    if (this.editForm.dirty) {\r\n      $event.returnValue = true;\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private memberService: MembersService,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.accountService.currentUser$\r\n      .pipe(take(1))\r\n      .subscribe((user) => (this.user = user));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadMember();\r\n  }\r\n\r\n  loadMember(): void {\r\n    this.memberService\r\n      .getMember(this.user.userName)\r\n      .subscribe((member) => (this.member = member));\r\n  }\r\n\r\n  updateMember(): void {\r\n    this.memberService.updateMember(this.member).subscribe(() => {\r\n      this.toastr.success('Profile updated successfully!');\r\n      this.editForm.reset(this.member);\r\n    });\r\n  }\r\n}\r\n","<div class=\"row\" *ngIf=\"member\">\n  <div class=\"col-4\">\n    <h1>Your profile</h1>\n  </div>\n  <div class=\"col-8\">\n    <div class=\"alert alert-info\" *ngIf=\"editForm.dirty\">\n      <strong>Information: </strong> You have made changes. Any unsaved changes\n      will be lost.\n    </div>\n  </div>\n  <div class=\"col-4\">\n    <div class=\"card\">\n      <img\n        src=\"{{ member.photoUrl || './assets/user.png' }}\"\n        alt=\"{{ member.knownAs }}\"\n        class=\"card-image-top img-thumbnail\"\n      />\n      <div class=\"card-body\">\n        <div>\n          <strong>Location: </strong>\n          <p>{{ member.city }}, {{ member.country }}</p>\n        </div>\n        <div>\n          <strong>Age: </strong>\n          <p>{{ member.age }}</p>\n        </div>\n        <div>\n          <strong>Last active: </strong>\n          <p>{{ member.lastActive | timeago }}</p>\n        </div>\n        <div>\n          <strong>Member since: </strong>\n          <p>{{ member.created | date }}</p>\n        </div>\n      </div>\n      <div class=\"card-footer\">\n        <button\n          [disabled]=\"!editForm.dirty\"\n          form=\"editForm\"\n          class=\"btn btn-success btn-block\"\n        >\n          Save Changes\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"col-8\">\n    <tabset class=\"member-tabset\">\n      <tab heading=\"About {{ member.knownAs }}\">\n        <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateMember()\">\n          <h4>Description</h4>\n          <textarea\n            class=\"form-control\"\n            [(ngModel)]=\"member.introduction\"\n            name=\"introduction\"\n            rows=\"6\"\n          ></textarea>\n          <h4 class=\"mt-2\">Looking for</h4>\n          <textarea\n            class=\"form-control\"\n            [(ngModel)]=\"member.lookingFor\"\n            name=\"lookingFor\"\n            rows=\"6\"\n          ></textarea>\n          <h4 class=\"mt-2\">Interests</h4>\n          <textarea\n            class=\"form-control\"\n            [(ngModel)]=\"member.interests\"\n            name=\"interests\"\n            rows=\"6\"\n          ></textarea>\n          <h4 class=\"mt-2\">Location Details:</h4>\n          <div class=\"form-inline\">\n            <label for=\"city\">City: </label>\n            <input\n              [(ngModel)]=\"member.city\"\n              type=\"text\"\n              name=\"city\"\n              class=\"form-control mx-2\"\n            />\n            <label for=\"city\">Country: </label>\n            <input\n              [(ngModel)]=\"member.country\"\n              type=\"text\"\n              name=\"country\"\n              class=\"form-control mx-2\"\n            />\n          </div>\n        </form>\n      </tab>\n      <tab heading=\"Edit Photos\">\n        <app-photo-editor [member]=\"member\"></app-photo-editor>\n      </tab>\n    </tabset>\n  </div>\n</div>\n","// Libs\nimport { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css'],\n})\nexport class ConfirmDialogComponent implements OnInit {\n  title: string;\n  message: string;\n  btnOkText: string;\n  btnCancelText: string;\n  result: boolean;\n\n  constructor(public bsModalRef: BsModalRef) {}\n\n  ngOnInit(): void {}\n\n  confirm(): void {\n    this.result = true;\n    this.bsModalRef.hide();\n  }\n\n  decline(): void {\n    this.result = false;\n    this.bsModalRef.hide();\n  }\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title pull-left\">{{ title }}</h4>\n</div>\n\n<div class=\"modal-body\">\n  <p>{{ message }}</p>\n</div>\n\n<div class=\"modal-footer\">\n  <button type=\"button\" class=\"btn btn-success\" (click)=\"confirm()\">\n    {{ btnOkText }}\n  </button>\n  <button type=\"button\" class=\"btn btn-danger\" (click)=\"decline()\">\n    {{ btnCancelText }}\n  </button>\n</div>\n","// Libs\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\nimport { PreventUnsavedChangesGuard } from './guards/prevent-unsaved-changes.guard';\nimport { AuthGuard } from './guards/auth.guard';\n\n// Components\nimport { HomeComponent } from './home/home.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\n\n// Resolvers\nimport { MemberDetailResolver } from './resolvers/member-detail.resolver';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { AdminGuard } from './guards/admin.guard';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: 'members',\n        component: MemberListComponent,\n      },\n      {\n        path: 'members/:username',\n        component: MemberDetailComponent,\n        resolve: { member: MemberDetailResolver },\n      },\n      {\n        path: 'member/edit',\n        component: MemberEditComponent,\n        canDeactivate: [PreventUnsavedChangesGuard],\n      },\n      { path: 'lists', component: ListsComponent },\n      { path: 'messages', component: MessagesComponent },\n      {\n        path: 'admin',\n        component: AdminPanelComponent,\n        canActivate: [AdminGuard],\n      },\n    ],\n  },\n  { path: 'not-found', component: NotFoundComponent },\n  { path: 'server-error', component: ServerErrorComponent },\n  { path: '**', component: NotFoundComponent, pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","// Libs\nimport { Component, OnInit, Input, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n// Models\nimport { User } from 'src/app/models/user';\n\n@Component({\n  selector: 'app-roles-modal',\n  templateUrl: './roles-modal.component.html',\n  styleUrls: ['./roles-modal.component.css'],\n})\nexport class RolesModalComponent implements OnInit {\n  @Input() updateSelectedRoles = new EventEmitter();\n  user: User;\n  roles: any[] = [];\n\n  constructor(public bsModalRef: BsModalRef) {}\n\n  ngOnInit(): void {}\n\n  updateRoles(): void {\n    this.updateSelectedRoles.emit(this.roles);\n    this.bsModalRef.hide();\n  }\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title pull-left\">Edit roles for {{ user.userName }}</h4>\n  <button\n    type=\"button\"\n    class=\"close pull-right\"\n    aria-label=\"Close\"\n    (click)=\"bsModalRef.hide()\"\n  >\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n\n<div class=\"modal-body\">\n  <form #rolesForm=\"ngForm\" id=\"rolesForm\">\n    <div class=\"form-check\" *ngFor=\"let role of roles\">\n      <input\n        type=\"checkbox\"\n        class=\"form-check-input\"\n        [checked]=\"role.checked\"\n        value=\"role.name\"\n        (change)=\"role.checked = !role.checked\"\n        [disabled]=\"role.name === 'Admin' && user.userName === 'admin'\"\n      />\n      <label>{{ role.name }}</label>\n    </div>\n  </form>\n</div>\n\n<div class=\"modal-footer\">\n  <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">\n    Cancel\n  </button>\n  <button type=\"button\" class=\"btn btn-success\" (click)=\"updateRoles()\">\n    Submit\n  </button>\n</div>\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}